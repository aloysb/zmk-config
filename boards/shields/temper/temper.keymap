/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE  0
#define NAV   1
#define SYM   2
#define NUM   3
#define SYS   4

#define LMEH   LC(LS(LALT))
#define RMEH   RC(RS(RALT))
#define LHYPR  LC(LS(LA(LGUI)))
#define RHYPR  RC(RS(RA(RGUI)))
#define ___ &trans


// Reminder of the key indexes
// RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)  RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
// RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)  RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
// RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)  RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
//                RC(3,2) RC(3,3) RC(3,4)  RC(3,5) RC(3,6) RC(3,7)


&caps_word {
    continue-list = <UNDERSCORE MINUS SPACE DELETE BACKSPACE>;
};

/ {
    behaviors {
        slt: sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <150>;
            flavor = "hold-preferred";
            bindings = <&sl>, <&kp>;
        };
        hml: balanced_homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;  
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hmr: balanced_homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;   
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 14 20 21 22 23 24 32 33 34>;
        };
        tp: tap_preferred_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;    
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        // Vertical Top row + Home row
        // Left
     
      left_bracket_combo {
            timeout-ms = <50>;
            key-positions = <1 11>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };
       left_brace_combo {
            timeout-ms = <50>;
            key-positions = <2 12>;
            bindings = <&kp LBRC>;
            layers = <0>;
        };
       left_paren_combo {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
       lt_combo {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp LT>;
            layers = <0>;
        };
        // Right
       gt_combo {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&kp GT>;
            layers = <0>;
        };
       right_paren_combo {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp RPAR>;
            layers = <0>;
        };
       right_brace_combo {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&kp RBRC>;
            layers = <0>;
        };
       right_bracket_combo {
            timeout-ms = <50>;
            key-positions = <8 18>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };

      // Vertial Home row + bottom
       minus_combo {
            timeout-ms = <50>;
            key-positions = <12 22>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };
       underscore_combo {
            timeout-ms = <50>;
            key-positions = <14 24>;
            bindings = <&kp UNDERSCORE>;
            layers = <0>;
        };
       equal_combo {
            timeout-ms = <50>;
            key-positions = <15 25>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
        vim_command_combo {
            timeout-ms = <50>;
            key-positions = <16 26>;
            bindings = <&kp COLON>;
            layers = <0>;
        };
       plus_combo {
            timeout-ms = <50>;
            key-positions = <17 27>;
            bindings = <&kp PLUS>;
            layers = <0>;
        };


      // Horizontal
        caps_words_combo {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&caps_word>;
        };

        // Set up mods combo - note: there is probably a better way to do this
        // Left hand combos - Basic dual combinations
        combo_left_ctrl_opt {
            timeout-ms = <50>;
            key-positions = <10 11>; // A + R (Ctrl + Opt)
            bindings = <&kp LCTRL &kp LALT>;
        };
        
        combo_left_ctrl_cmd {
            timeout-ms = <50>;
            key-positions = <10 12>; // A + S (Ctrl + Cmd)
            bindings = <&kp LCTRL &kp LCMD>;
        };
        
        combo_left_ctrl_shift {
            timeout-ms = <50>;
            key-positions = <10 13>; // A + T (Ctrl + Shift)
            bindings = <&kp LCTRL &kp LSHIFT>;
        };
        
        combo_left_opt_cmd {
            timeout-ms = <50>;
            key-positions = <11 12>; // R + S (Opt + Cmd)
            bindings = <&kp LALT &kp LCMD>;
        };
        
        combo_left_opt_shift {
            timeout-ms = <50>;
            key-positions = <11 13>; // R + T (Opt + Shift)
            bindings = <&kp LALT &kp LSHIFT>;
        };
        
        combo_left_cmd_shift {
            timeout-ms = <50>;
            key-positions = <12 13>; // S + T (Cmd + Shift)
            bindings = <&kp LCMD &kp LSHIFT>;
        };
        
        // Right hand combos - Basic dual combinations
        combo_right_shift_cmd {
            timeout-ms = <50>;
            key-positions = <16 17>; // N + E (Shift + Cmd)
            bindings = <&kp RSHIFT &kp RCMD>;
        };
        
        combo_right_shift_opt {
            timeout-ms = <50>;
            key-positions = <16 18>; // N + I (Shift + Opt)
            bindings = <&kp RSHIFT &kp RALT>;
        };
        
        combo_right_shift_ctrl {
            timeout-ms = <50>;
            key-positions = <16 19>; // N + O (Shift + Ctrl)
            bindings = <&kp RSHIFT &kp RCTRL>;
        };
        
        combo_right_cmd_opt {
            timeout-ms = <50>;
            key-positions = <17 18>; // E + I (Cmd + Opt)
            bindings = <&kp RCMD &kp RALT>;
        };
        
        combo_right_cmd_ctrl {
            timeout-ms = <50>;
            key-positions = <17 19>; // E + O (Cmd + Ctrl)
            bindings = <&kp RCMD &kp RCTRL>;
        };
        
        combo_right_opt_ctrl {
            timeout-ms = <50>;
            key-positions = <18 19>; // I + O (Opt + Ctrl)
            bindings = <&kp RALT &kp RCTRL>;
        };
    };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      display-name="Base";
      bindings = <
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &kp Q          &kp W          &tp LMEH  F    &kp P          &kp B            &kp J          &kp L          &tp RMEH  U    &kp Y          &kp APOS
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &hml LCTRL A   &hml LALT R    &hml LGUI S    &hml LSHFT T   &tp LHYPR G       &tp RHYPR M     &hmr RSHFT N   &hmr RGUI E    &hmr RALT I    &hmr RCTRL O
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp Z          &kp X          &kp C          &kp D          &kp V            &kp K          &kp H          &kp COMMA      &kp DOT        &kp FSLH
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                        &slt SYS ESC   &slt NAV BKSP &slt NUM TAB    &slt SYM RET  &kp SPACE       &kp DEL
      //                               ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
      >;
    };
    nav_layer {
      display-name="Nav";
      bindings = <
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &none          &none          &kp LMEH       &none          &none            &kp DOWN       &kp RIGHT      &kp PG_DN      &none          &none
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp LCTRL      &kp LALT       &kp LGUI       &kp LSHFT      &kp LHYPR         &kp HOME       &kp END        &none          &none         &none
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &none         &none           &none          &none          &none            &kp UP         &kp LEFT       &kp PG_UP      &none          &none 
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                        &kp ESC        &none          &kp TAB          &kp RET        &kp BKSP       &kp DEL
      //                               ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
      >;
    };

   symbols_layer {
      display-name="Sym";
      bindings = <
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &kp GRAVE      &kp LBKT       &kp EQUAL      &kp RBKT       &kp BSLH          &none         &none          &kp RMEH      &none          &none
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp CARET      &kp LPAR       &kp SEMI       &kp RPAR       &kp ASTRK         &kp RHYPR       &kp RSHFT     &kp RGUI       &kp RALT       &kp RCTRL
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp AT         &kp DLLR       &kp MINUS      &kp EXCL       &kp PRCNT         &none          &none          &none          &none          &none 
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                        &kp HASH       &kp AMPS       &kp DOT           &kp RET        &kp BKSP       &kp DEL
      //                               ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
      >;
    };

   numbers_layer {
      display-name="Num";
      bindings = <
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &none          &none         &kp RMEH        &none          &none            &kp PLUS       &kp KP_N7      &kp KP_N8      &kp KP_N9      &kp ASTRK
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp LHYPR       &kp LSHFT      &kp LGUI       &kp LALT       &kp LCTRL        &kp EQUAL      &kp KP_N4      &kp KP_N5      &kp KP_N6      &kp FSLH
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &none          &none          &none          &none          &none            &kp MINUS      &kp KP_N1      &kp KP_N2      &kp KP_N3      &kp PRCNT
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                        &kp ESC        &kp SPACE      &kp TAB          &kp COMMA      &kp KP_N0      &kp DOT 
      //                               ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
      >;
    };
    sys_layer {
      display-name="Sys";
      bindings = <
      // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &bt BT_CLR_ALL &none          &kp LMEH       &none          &none            &kp C_VOL_DN   &kp C_BRI_UP   &none          &none          &none
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp LCTRL      &kp LALT       &kp LGUI       &kp LSHFT      &kp LHYPR         &kp RHYPR       &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT
      // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &none          &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &none            &kp C_VOL_UP   &kp C_BRI_DN   &none          &none          &none 
      // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤ ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────╯
                                        &kp ESC        &none          &kp TAB          &kp C_PP       &kp BKSP       &kp C_MUTE
      //                               ╰──────────────┴──────────────┴──────────────╯ ╰──────────────┴──────────────┴──────────────╯
      >;
    };
  };
};
